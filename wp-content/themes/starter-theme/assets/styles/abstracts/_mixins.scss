// Centering mixins ------------------
@mixin absolute-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin flex-center() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin inline-flex-center() {
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

/* To position an element to fill its parent (must be relative) */
@mixin absolute-stretch($bg-color: null) {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  @if $bg-color {
    background-color: $bg-color;
  }
}

// Pseudo-elements Mixins ---------------------
/* Pseudo with dimensions */
@mixin pseudo-block($width, $height, $bg-color: null) {
  content: "";
  position: absolute;
  width: $width;
  height: $height;
  @if $bg-color {
    background-color: $bg-color;
  }
}

/* Pseudo with stretch */
@mixin pseudo-block-stretch($bg-color: null) {
  @include absolute-stretch($bg-color);
  content: "";
}

// Fonts-Mixins
/* To define basic fonts properties */
@mixin ft($family: "", $size: "", $weight: "", $color: "", $lineheight: "") {
  @if $family != "" {
    font-family: $family;
  }
  @if $size != "" {
    font-size: $size;
  }
  @if $weight != "" {
    font-weight: $weight;
  }
  @if $color != "" {
    color: $color;
  }
  @if $lineheight != "" {
    line-height: $lineheight;
  }
}

// Responsive Mixins ------------------
@mixin mobile-small-only {
  @media screen and (max-width: map-get($breakpoints, mobile-small)) {
    @content;
  }
}

@mixin mobile-only {
  @media screen and (min-width: map-get($breakpoints, mobile)) and (max-width: map-get($breakpoints, tablet-small)) {
    @content;
  }
}
@mixin tablet-small-only {
  @media screen and (min-width: map-get($breakpoints, tablet-small)) and (max-width: map-get($breakpoints, tablet-portrait)) {
    @content;
  }
}
@mixin tablet-portrait-only {
  @media screen and (min-width: map-get($breakpoints, tablet-portrait)) and (max-width: map-get($breakpoints, tablet-landscape)) {
    @content;
  }
}
@mixin tablet-landscape-only {
  @media screen and (min-width: map-get($breakpoints, tablet-landscape)) and (max-width: map-get($breakpoints, desktop)) {
    @content;
  }
}
@mixin desktop-only {
  @media screen and (min-width: map-get($breakpoints, tablet)) and (max-width: map-get($breakpoints, hd-screen)) {
    @content;
  }
}
@mixin wide-secreen-only {
  @media screen and (min-width: map-get($breakpoints, wide)) {
    @content;
  }
}
